{"version":3,"sources":["Components/AddButton/AddButton.jsx","Components/AddForm/AddForm.jsx","Components/TodoList/TodoList.jsx","Components/EditForm/EditForm.jsx","Components/UpdateBtn/UpdateBtn.jsx","App.js","index.js"],"names":["AddButton","addItem","OverlayTrigger","placement","overlay","Tooltip","id","className","onClick","AddForm","onChange","input","type","value","todo","placeholder","TodoList","todoList","editItem","deleteItem","ListGroup","variant","map","Item","_id","EditForm","UpdateBtn","update","App","useState","setTodoList","useEffect","axios","get","then","res","data","catch","e","console","log","setInput","edit","setEdit","alert","setAlert","document","getElementById","focus","Alert","show","target","toEdit","string","firstCap","toUpperCase","slice","put","updateItem","todoItem","str","newTodo","post","delete","filteredList","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.24a04e50.chunk.js","sourcesContent":["import './AddButton.css'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { PlusCircleFill } from 'react-bootstrap-icons';\r\nconst AddButton = ({ addItem }) => {\r\n    return <OverlayTrigger placement='bottom'\r\n        overlay={\r\n            <Tooltip id='tooltip-bottom'>add</Tooltip>\r\n        } >\r\n\r\n        <PlusCircleFill className='icons addIcon' onClick={addItem} ></PlusCircleFill>\r\n    </OverlayTrigger>\r\n}\r\nexport default AddButton;","const AddForm = ({ onChange, input }) => {\r\n    return <input className='input' id='addForm' type='text' value={input.todo} onChange={onChange} placeholder='Add an item' />\r\n}\r\nexport default AddForm;","import { PencilSquare, XCircleFill } from 'react-bootstrap-icons';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ todoList, editItem, deleteItem }) => {\r\n    return <ListGroup variant='flush'>\r\n        {todoList.map((todo) => {\r\n            return <ListGroup.Item key={todo._id} id='list'>\r\n                <span>\r\n                    {todo.todo}\r\n                </span>\r\n                <span id='listIcons'>\r\n                    <OverlayTrigger placement='bottom'\r\n                        overlay={\r\n                            <Tooltip id='tooltip-bottom'>edit</Tooltip>\r\n                        } >\r\n                        <PencilSquare className='icons editIcon' onClick={() => editItem(todo)}>Edit</PencilSquare>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger placement='bottom'\r\n                        overlay={\r\n                            <Tooltip id='tooltip-bottom'>delete</Tooltip>\r\n                        } >\r\n                        <XCircleFill className='icons delIcon' onClick={() => deleteItem(todo._id)}>Delete</XCircleFill>\r\n                    </OverlayTrigger>\r\n                </span>\r\n            </ListGroup.Item>\r\n        })}\r\n    </ListGroup>\r\n}\r\nexport default TodoList;","const EditForm = ({ input, onChange }) => {\r\n    return <input className='input' id='editForm' value={input.todo} onChange={onChange} />\r\n}\r\nexport default EditForm;","import './UpdateBtn.css'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { CheckCircleFill } from 'react-bootstrap-icons';\r\n\r\nconst UpdateBtn = ({ input, update }) => {\r\n    return <OverlayTrigger placement='bottom'\r\n        overlay={<Tooltip id='tooltip-bottom'>update</Tooltip>} >\r\n        <CheckCircleFill className='updateBtn icons' onClick={() => { update(input) }} />\r\n    </OverlayTrigger>\r\n}\r\nexport default UpdateBtn;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddButton from './Components/AddButton/AddButton';\r\nimport AddForm from './Components/AddForm/AddForm'\r\nimport TodoList from './Components/TodoList/TodoList'\r\nimport EditForm from './Components/EditForm/EditForm'\r\nimport UpdateBtn from './Components/UpdateBtn/UpdateBtn'\r\nimport { Alert } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n\r\n  const [todoList, setTodoList] = useState([])\r\n  useEffect(() => {\r\n    axios.get('/todos')\r\n      .then(res => setTodoList(res.data))\r\n      .catch(e => console.log('Failed to get todos list. Error: ', e))\r\n  }, [])\r\n  const [input, setInput] = useState({ todo: '' }),\r\n    [edit, setEdit] = useState(false),\r\n    [alert, setAlert] = useState(false),\r\n\r\n    onChange = (e) => {\r\n      setInput({ todo: e.target.value })\r\n      setAlert(false)\r\n    },\r\n\r\n    addItem = () => {\r\n      if (input.todo) {\r\n        const str = input.todo,\r\n          title = str[0].toUpperCase() + str.slice(1),\r\n          newTodo = { todo: title }\r\n        axios.post('/add', newTodo)\r\n          .then(() => {\r\n            axios.get('/todos')\r\n              .then(res => setTodoList(res.data))\r\n              .catch(e => console.log('Failed to get todos list. Error: ', e))\r\n            setInput({ todo: '' })\r\n          })\r\n          .catch(e => console.log('Failed to add todo. Error: ', e))\r\n      }\r\n      else {\r\n        setAlert(true)\r\n      }\r\n    },\r\n\r\n    editItem = (todo) => {\r\n      setInput({\r\n        ...todo\r\n      })\r\n      setEdit(true)\r\n    },\r\n\r\n    deleteItem = (id) => {\r\n      axios.delete(`/delete/${id}`)\r\n        .then(() => {\r\n          const filteredList = todoList.filter(todo => todo._id !== id)\r\n          setTodoList(filteredList)\r\n        })\r\n        .catch(e => console.log(`Failed to delete. Error: ${e}`))\r\n    },\r\n\r\n    update = (toEdit) => {\r\n      if (input.todo) {\r\n        const string = toEdit.todo,\r\n          firstCap = string[0].toUpperCase() + string.slice(1)\r\n        axios.put(`/update/${toEdit._id}`, { todo: firstCap })\r\n          .then(() => {\r\n            const updateItem = todoList.map(todoItem => (todoItem._id === toEdit._id ? { ...todoItem, todo: firstCap } : todoItem))//, id: toEdit.id \r\n            setTodoList(updateItem)\r\n            setInput({\r\n              todo: ''\r\n            })\r\n            setEdit(false)\r\n          })\r\n          .catch(e => console.log(`Failed to update todos list. Error: ${e}`))\r\n      }\r\n      else {\r\n        setAlert(true)\r\n      }\r\n    },\r\n\r\n    onEdit = (e) => {\r\n      setInput({\r\n        todo: e.target.value,\r\n        _id: input._id\r\n      })\r\n      setAlert(false)\r\n    }\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      document.getElementById('editForm').focus();\r\n    } else {\r\n      document.getElementById('addForm').focus();\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='appContainer'>\r\n      <h2 className='head'> TODO APP</h2>\r\n      <Alert id='alert' show={alert} variant='dark'>\r\n        Please enter an item!\r\n        </Alert>\r\n      <div className='addSec'>\r\n        {\r\n          edit ?\r\n            <>\r\n              <EditForm input={input} onChange={onEdit} />\r\n              <UpdateBtn input={input} update={update} />\r\n            </> :\r\n            <>\r\n              <AddForm onChange={onChange} input={input} />\r\n              <AddButton addItem={addItem} />\r\n            </>\r\n        }\r\n      </div>\r\n      <TodoList todoList={todoList} deleteItem={deleteItem} editItem={editItem} />\r\n    </div >\r\n  )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}